
== 2009-11-04 ==

 * New idea for the "language definitions".  Right now I've been hacking on putting
   "Dictionary Fields" under the "Edit Language" page and saving the data as a dumped Array.
   But it would be better to store a language definition as a special node and then have
   something on the "Edit Language" page that selects this language definition as the 
   canonical one.

   The advantages of this are that anyone could create a 'language definition' node, edit
   it and test it, then it can be swapped as the canonical language node.  It would also
   allow for integrated testing, speed, all good things.

   So, I'm thinking we store a PHP Array or JSON Object as the body of the 'language definition'
   node.  Then we include a special JavaScript'd out editor, which will provide a two paned view
   (like in an IDE) with a tree of things to edit on the left and an editting area on the right.
   [For degradability, this could be done as a <ul> on the left and a series of <div>'s with
   <textareas> on the right, which is magically converted to the JavaScript'd out controls]

   Things that can be edited, would include the list of classes/options/forms for each
   POS (as taken from the POS taxonomy).  Each of these would contain (possibly) some 
   UI information (order, description, where they should go) and the possibility of a
   JavaScript function to be put in the morphology definition.  JavaScript fields would
   get some slick JS-enabled editor.

   The code for generating the alphabet would also be there, along with a way to view the
   resulting alphabet and see if it matches what you want.

   All these little bits would be combined to create the morphology definition, which would
   definitely be cached on disk when its selected as the canonical definition.

   There would be a section that contains test cases.  Test cases can be imported from the
   existing dictionary and modified or simply created here (they'd be new Entry({ ... })
   bits stashed in some array and a list of expected outcomes).

 * Create a 'Language' CCK field, which allows you to select a language from either
   (1) any Drupal language code, or (2) any activated language.  This would allow people to
   mark things as belonging to a language without changing its translation status in Drupal.

== 2009-10-31 ==

 * Add a tab called "Dictionary Fields" to the "Edit Language" page (admin/sttings/language/edit/%)
   which will allow us to configure the per-language and per-pos fields that will be provided by
   the 'lingwo_dictionary_fields' CCK field.  For example, we will say that only 'nouns' get a
   'gender' option.  We should also include some field for JavaScript (eventually a generic syntax
   for users with disabled JavaScript) to exclude fields based on code (ie. we need to say only 
   show the 'virile' class when: "entry.getOption('gender') == 'masculine'".  This data will be
   saved to a custom table created by our module.
 
 * Add a 'lingwo_dictionary_fields' CCK type, which shows the appropriate fields on the entry
   edit form.  It should also load the selected languages morphology and recalculate the
   values as things are changed.

== 2009-10-29 ==

 * Port the unit tests in test_polish.js from the first JavaScript implementation of Lingwo.  This
   should cover ALL of the Polish morphology our engine is capable of dealing with.

== 2009-07-06 ==

 * Remove 'weight' and 'remove_sense' from each sense before it is saved.

 * Put the info from "Translate" tab on the "View" area for original entries.  Also, make a more
   convenient/obvious link back to the original entry.
 
 * Remove the "Select translations for ___" section from the "Translation" tab.
 
 * Restore the links to the pages for translated words.

 * Make the "retire this obsolete translation" check box actually work (you could use
   is_empty!)
 
 * Fix the bug where new translations have one too many senses listed.

 * Try and fix AHAH!  There are so many weird issues with it I'm not sure what to do..

== 2009-07-03 ==

 * Make it so that we could use either the normal taxonomy form stuff or a content_taxonomy
   CCK field.  (Ie. it needs to disable it correctly).
 
== 2009-07-02 ==

 * Hi-jack the node edit form for the "entry" type and MAYBE make the language be the default
   language.
  
 * Use some validate hook to validate that "title", "language" and "Part of Speech" can't be 
   changed on an existing node or on a translation.

 * Hi-jack node save (or some validate hook?) and make sure that entries are unique by language,
   pos and title, add new nodes to the lingwo_dictionary_entry table.

== 2009-02-26 ==

 * Get searching and looking up definitions alot tighter (meaning easier to use for the end
   user).

== 2009-02-15 ==

 * Figure out proper 404 behaviour.

 * Figure out a good way to do the title on the translation view/edit pages.

 * Figure out a good way to link back to the entry from the translation view/edit pages.
 
 * Seperate the word translation from the "note" (ie. some info to go into paranthesis,
   or maybe just use convention, which is, if they write anything in parantheses?).  Or
   maybe the reverse, that either the whole thing is the word, or the contents of [brackets]
   are.  So, then the English translation of "szkolny", would be "pertaining to [school:noun]".
   Putting ":noun" is necessary because "szkolny" is an adjective, so it would default to link
   to "[school:adjective]".
 
 * Add the "Same as" selector on translation senses, so that senses can be consolidated.

== 2009-02-12 ==

 * Finish up "/languages":
   
   - Add a search bit, where we can try and find a language from keywords (fuzzily!)
     and the language code.

