<?php

require_once(drupal_get_path('module', 'lingwo_dictionary') .'/lingwo_dictionary.test.inc');

class LingwoDictionaryBaseTestCase extends LingwoDictionaryWebTestCase {
  private $pos_terms;

  public static function getInfo() {
    return array(
      'name' => 'lingwo_dictionary',
      'description' => 'Testing the web functionality provided by lingwo_dictionary.',
      'group' => 'Lingwo Dictionary',
    );
  }

  public function testUniqueEntries() {
    $entry_type = lingwo_dictionary_settings('entry_content_type');

    $entry = array(
      'headword' => 'czerwony',
      'language' => 'pl',
      'pos' => 'Adjective',
    );

    // Create the first time
    $this->createEntry($entry);
    $this->assertText(t('@type czerwony has been created.', array('@type' => $entry_type)));

    // Try to create a second time (and get a duplicate!)
    $this->createEntry($entry);
    $this->assertText(t('Entry with this language, part of speech and headword combination already exists: @name', array('@name' => $entry['name'])));

    // Modifying the part of speech should be enough to allow it to be created
    $entry['pos'] = 'Noun';
    $this->createEntry($entry);
    $this->assertText(t('@type czerwony has been created.', array('@type' => $entry_type)));
  }

  public function testAdminSettings() {
    // create a new content type
    $new_type = $this->drupalCreateContentType();

    // create a new taxonomy vocabulary
    $new_voc = $this->createVocabulary();

    // load page, verify the current settings
    $this->drupalGet('admin/settings/lingwo_dictionary');
    $this->assertFieldByName('lingwo_dictionary_lookup_path', lingwo_dictionary_settings('lookup_path'));
    $this->assertFieldByName('lingwo_dictionary_entry_content_type', lingwo_dictionary_settings('entry_content_type'));
    $this->assertFieldByName('lingwo_dictionary_pos_vocabulary', lingwo_dictionary_settings('pos_vocabulary'));

    // save new settings.
    $this->drupalPost(NULL, array(
      'lingwo_dictionary_lookup_path' => 'test',
      'lingwo_dictionary_entry_content_type' => $new_type->type,
      'lingwo_dictionary_pos_vocabulary' => $new_voc->vid,
    ), 'Save configuration');
    $this->assertText('The configuration options have been saved');
    // verify that they took
    $this->assertFieldByName('lingwo_dictionary_lookup_path', 'test');
    $this->assertFieldByName('lingwo_dictionary_entry_content_type', $new_type->type);
    $this->assertFieldByName('lingwo_dictionary_pos_vocabulary', $new_voc->vid);
  }
}

class LingwoDictionarySettingsTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'lingwo_dictionary_settings',
      'description' => 'Testing the lingwo_dictionary_settings() function.',
      'group' => 'Lingwo Dictionary',
    );
  }

  public function setUp() {
    parent::setUp('lingwo_dictionary');
  }

  public function testSettingsWithDefault() {
    $value = lingwo_dictionary_settings('lookup_path');
    $this->assertEqual($value, 'lookup');

    lingwo_dictionary_settings('lookup_path', 'new_path');
    $value = lingwo_dictionary_settings('lookup_path');
    $this->pass($value);
    $this->assertEqual($value, 'new_path');
  }

  public function testSettingsNoDefault() {
    $value = lingwo_dictionary_settings('entry_content_type');
    $this->assertNull($value);

    lingwo_dictionary_settings('entry_content_type', 'entry');
    $value = lingwo_dictionary_settings('entry_content_type');
    $this->assertEqual($value, 'entry');
  }

  // TODO: find some way to intercept the error/exception!
  /*
  public function testNonExistant() {
    $value = lingwo_dictionary_settings('blah');
    $this->assertNull($value);
  }
  */

  // TODO: we can't seem to test the message!!
  public function testCheck() {
    $check = lingwo_dictionary_check_settings();
    $this->assertFalse($check, t('lingwo_dictionary_check_settings() == FALSE'));
    $this->drupalGet('node');
    //$this->assertText('Lingwo Dictionary will not work correctly until it is configured');

    lingwo_dictionary_settings('entry_content_type', 'entry');
    lingwo_dictionary_settings('pos_vocabulary', 6);

    $check = lingwo_dictionary_check_settings();
    $this->assertTrue($check, t('lingwo_dictionary_check_settings() == TRUE'));
    $this->drupalGet('node');
    //$this->assertNoText('Lingwo Dictionary will not work correctly until it is configured');
  }
}

