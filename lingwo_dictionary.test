<?php

require_once(drupal_get_path('module', 'lingwo_dictionary') .'/lingwo_dictionary.test.inc');

class LingwoDictionaryBaseTestCase extends LingwoDictionaryWebTestCase {
  private $pos_terms;

  public static function getInfo() {
    return array(
      'name' => 'lingwo_dictionary',
      'description' => 'Testing the web functionality provided by lingwo_dictionary.',
      'group' => 'Lingwo Dictionary',
    );
  }

  public function setUp() {
    // TODO: put any extra dependancies here.
    parent::setUp();
  }

  public function testUniqueEntries() {
    $entry_type = lingwo_dictionary_entry_content_type();

    $entry = array(
      'headword' => 'czerwony',
      'language' => 'pl',
      'pos' => 'Adjective',
    );

    // Create the first time
    $this->createEntry($entry);
    $this->assertText(t('@type czerwony has been created.', array('@type' => $entry_type)));

    // DEBUG
    $res = db_query('SELECT * FROM {lingwo_dictionary_entry}');
    $o = db_fetch_object($res);
    $this->pass(print_r($o, TRUE));

    // Try to create a second time (and get a duplicate!)
    $this->createEntry($entry);
    $this->assertText(t('Entry with this language, part of speech and headword combination already exists: @name', array('@name' => $entry['name'])));

    // Modifying the part of speech should be enough to allow it to be created
    $entry['pos'] = 'Noun';
    $this->createEntry($entry);
    $this->assertText(t('@type czerwony has been created.', array('@type' => $entry_type)));
  }
}

