<?php
// $Id$

/**
 * @file
 * Implements language definitions for Lingwo Dictionary
 */

/**
 * Implementation of hook_menu().
 */
function lingwo_language_menu() {
  $items = array();

  // Put a 'Dictionary Fields' tab onto the 'Edit Language' page.
  $items['admin/settings/language/edit/%/basic_information'] = array(
    'title' => 'Basic Information',
    'type'  => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10
  );
  $items['admin/settings/language/edit/%/dictionary_fields'] = array(
    'title' => 'Dictionary Fields',
    'description' => t('Set the per-language fields that can appear in a "Lingwo Dictionary Fields" control'),
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lingwo_language_fields_form', 4),
    'file' => 'lingwo_language.admin.inc',
    'type' => MENU_LOCAL_TASK
  );


  return $items;
}

/**
 * Implementation of hook_theme().
 */
function lingwo_language_theme() {
  return array(
    // For our per-language stuff
    'lingwo_language_tabs' => array(
      'arguments' => array('form' => NULL),
    ),
    'lingwo_language_fields_subform' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Per-language settings array
 */

// TODO: We're hard-coding this for now.
$GLOBALS['LANG_SETTINGS'] = array(
  'pl' => array(
    'fields' => array(
      'noun' => array(
        'options' => array(
          array(
            'name' => 'gender',
            'label' => 'Gender',
            'values' => array(
              'masculine' => 'Masculine',
              'feminine' => 'Feminine',
              'neuter' => 'Neuter'
            ),
            'required' => TRUE
          )
        ),
        'forms' => array(
          array('name' => '*stem'),
          array('name' => '*stem.singular'),
          array('name' => '*stem.plural'),
          array('name' => 'nominative.singular'),
          array('name' => 'nominative.plural'),
          array('name' => 'accusative.singular'),
          array('name' => 'accusative.plural'),
          array('name' => 'genitive.singular'),
          array('name' => 'genitive.plural'),
        ),
      ),
      'adjective' => array(
        'classes' => array(
          array('name' => 'soft'),
        ),
        'forms' => array(
          array('name' => '*stem'),
          array('name' => 'nominative.singular.masculine'),
          array('name' => 'nominative.singular.feminine'),
          array('name' => 'nominative.singular.neuter'),
          array('name' => 'nominative.plural.non_virile'),
          array('name' => 'nominative.plural.virile'),
          array('name' => 'accusative.singular.feminine'),
          array('name' => 'accusative.singular.neuter'),
          array('name' => 'accusative.singular.masculine.animate'),
          array('name' => 'accusative.singular.masculine.inanimate'),
          array('name' => 'accusative.plural.virile'),
          array('name' => 'accusative.plural.non_virile'),
          array('name' => 'genitive.singular.feminine'),
          array('name' => 'genitive.singular.masculine'),
          array('name' => 'genitive.plural'),
        )
      ),
      'verb' => array(
        'options' => array(
          array(
            'name' => 'conjugation',
            'values' => array(
              'first' => 'First',
              'second' => 'Second',
              'third' => 'Third'
            )
          ),
        ),
        'forms' => array(
          array('name' => '*stem'),
          array('name' => 'nonpast.singular.1p'),
          array('name' => 'nonpast.singular.2p'),
          array('name' => 'nonpast.singular.3p'),
          array('name' => 'nonpast.plural.1p'),
          array('name' => 'nonpast.plural.2p'),
          array('name' => 'nonpast.plural.3p'),
        ),
      ),
    )
  )
);

function lingwo_language_load($lang) {
  // TODO: loads the node which represents this language.
  // TODO: We will have one 'canonical' node for each language.  Its id
  // will be stored in a variable.  This will look up the node id and load
  // it.
}

function lingwo_language_settings($lang) {
  // TODO: we should load the language node, decode its body and return it.
  global $LANG_SETTINGS;
  return $LANG_SETTINGS[$lang];
}

function lingwo_language_fields($lang, $pos) {
  // TODO: we should have some complex layout stuff so that we can customize
  // the look of this form, but for now..
  $settings = lingwo_language_settings($lang);
  $fields = &$settings['fields'][$pos];

  $result = array();
  if (!empty($fields['classes'])) {
    foreach ($fields['classes'] as $field) {
      $result[] = ($field + array('type' => 'class'));
    }
  }
  if (!empty($fields['options'])) {
    foreach ($fields['options'] as $field) {
      $result[] = ($field + array('type' => 'option'));
    }
  }
  if (!empty($fields['forms'])) {
    foreach ($fields['forms'] as $field) {
      $result[] = ($field + array('type' => 'form'));
    }
  }

  return $result;
}

