<?php
// $Id$

/**
 * @file
 * For storing a users "Words I Am Learning" list
 */

/*
 * Implementation of hook_menu().
 */
function lingwo_wial_menu() {
  $menu['lingwo_wial/toggle'] = array(
    'page callback' => 'lingwo_wial_toggle',
    // TODO: we really SHOULD have a permission for this!!  Anonymous users shouldn't
    // be able to do it!!
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  return $menu;
}

/*
 * Implementation of hook_link().
 */
function lingwo_wial_link($type, $node, $teaser=FALSE) {
  global $user;

  if ($user->uid == 0 || $type != 'node' || $node->type != lingwo_dictionary_settings('entry_content_type'))
    return;

  // the wial list only deals with translations
  if (!lingwo_dictionary_entry_is_translation($node))
    return;

  if (lingwo_wial_get($node->nid)) {
    $op = 'remove';
  }
  else {
    $op = 'add';
  }

  $link['href'] = 'lingwo_wial/toggle';
  $link['query'] = array(
    'destination' => $_GET['q'],
    'op'          => $op,
    'nid'         => $node->nid,
  );
  $link['title'] = ($op == 'add') ?
      t('Add to my "Words I Am Learning" List') :
      t('Remove from my "Words I Am Learning" List');
  // For the JavaScript that doesn't yet exist
  $link['attributes'] = array('class' => 'lingwo-wial lingwo-wial-'. $op);

  // TODO: add a javascript helper!!

  return array($link);
}

/*
 * Implementation of hook_nodeapi().
 */
function lingwo_wial_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type != lingwo_dictionary_settings('entry_content_type'))
    return;

  // the wial list only deals with translations
  if (!lingwo_dictionary_entry_is_translation($node))
    return;

  switch ($op) {
    case 'delete':
      // TODO: Should we loop through all the users who have this on their WIAL list
      // and call the remove hook?  Sounds dangerous.  This could lock up the request
      // in trying to edit a million Anki decks...
      db_query('DELETE FROM {lingwo_wial_node} WHERE nid = %d', $node->nid);
      break;
  }
}

/**
 * Implementation of hook_views_api().
 */
function lingwo_wial_views_api() {
  return array(
    'api'  => 2,
    'path' => drupal_get_path('module', 'lingwo_wial'),
  );
}

/**
 * Implementation of hook_node_operations().
 */
function lingwo_wial_node_operations() {
  return array(
    array(
      'label' => t('Remove from my "Words I Am Learning" List'),
      'callback' => 'lingwo_wial_bulk_remove',
    )
  );
}

/*
 * Pages
 */

function lingwo_wial_toggle() {
  switch ($_GET['op']) {
    case 'add':
      if (!lingwo_wial_add($_GET['nid'])) {
        drupal_set_message(t('Unable to add word to your "Words I Am Learning" list'), 'error');
      }
      break;

    case 'remove':
      if (!lingwo_wial_remove($_GET['nid'])) {
        drupal_set_message(t('Unable to remove word from your "Words I Am Learning" list'), 'error');
      }
      break;
  }

  drupal_goto($_GET['destination']);
}

/*
 * API functions
 */

// API function for determining if a user has a particular item
function lingwo_wial_get($nid, $uid=NULL) {
  global $user;

  if (is_null($uid)) {
    $uid = $user->uid;
  }

  $res = db_query("SELECT * FROM {lingwo_wial_node} WHERE nid = '%s' AND uid = '%s'", $nid, $uid);
  return db_fetch_object($res);
}

// Add a node to a users WIAL list
function lingwo_wial_add($nid, $uid=NULL) {
  global $user;

  if (is_null($uid)) {
    $uid = $user->uid;
  }
  if ($uid == 0) {
    return FALSE;
  }

  $obj = (object)array(
    'uid'   => $uid,
    'nid'   => $nid,
    'added' => time(),
  );

  if (drupal_write_record('lingwo_wial_node', $obj)) {
    module_invoke_all('lingwo_wial', 'add', $nid, $uid);
    return TRUE;
  }

  return FALSE;
}

// Remove a node from a users WIAL list
function lingwo_wial_remove($nid, $uid=NULL) {
  global $user;

  if (is_null($uid)) {
    $uid = $user->uid;
  }
  if ($uid == 0) {
    return FALSE;
  }

  if (db_query("DELETE FROM {lingwo_wial_node} WHERE uid = %d AND nid = %d", $uid, $nid)) {
    module_invoke_all('lingwo_wial', 'remove', $nid, $uid);
    return TRUE;
  }

  return FALSE;
}

// Bulk remove nodes
function lingwo_wial_bulk_remove($nids, $uid=NULL) {
  foreach ($nids as $nid) {
    lingwo_wial_remove($nid, $uid);
  }
}


/*
 * Theme functions
 */

function templace_preprocess_theme_lingwo_wial_form(&$vars, $form) {
  $vars['teaser']  = $form['#teaser'];
  $vars['page']    = $form['#page'];
  $vars['node']    = $form['#node'];
  $vars['wial_op'] = $form['#wial_op'];
}

function theme_lingwo_wial_form($form) {
  return drupal_render($form);
}

